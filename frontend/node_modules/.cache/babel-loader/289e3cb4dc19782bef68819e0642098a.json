{"ast":null,"code":"export const sortRowTree = params => {\n  const {\n    rowIds,\n    rowTree,\n    disableChildrenSorting,\n    sortRowList\n  } = params;\n  let sortedRows = []; // Group the rows by parent\n\n  const groupedByParentRows = new Map([[null, {\n    body: [],\n    footer: null\n  }]]);\n\n  for (let i = 0; i < rowIds.length; i += 1) {\n    const rowId = rowIds[i];\n    const node = rowTree[rowId];\n    let group = groupedByParentRows.get(node.parent);\n\n    if (!group) {\n      group = {\n        body: [],\n        footer: null\n      };\n      groupedByParentRows.set(node.parent, group);\n    }\n\n    if (node.position === 'footer') {\n      group.footer = node;\n    } else {\n      group.body.push(node);\n    }\n  } // Apply the sorting to each list of children\n\n\n  const sortedGroupedByParentRows = new Map();\n  groupedByParentRows.forEach((group, parent) => {\n    if (group.body.length === 0) {\n      sortedGroupedByParentRows.set(parent, []);\n    } else {\n      let groupSortedRows;\n      const depth = group.body[0].depth;\n\n      if (depth > 0 && disableChildrenSorting || !sortRowList) {\n        groupSortedRows = group.body.map(row => row.id);\n      } else {\n        groupSortedRows = sortRowList(group.body);\n      }\n\n      if (group.footer != null) {\n        groupSortedRows.push(group.footer.id);\n      }\n\n      sortedGroupedByParentRows.set(parent, groupSortedRows);\n    }\n  }); // Flatten the sorted lists to have children just after their parent\n\n  const insertRowListIntoSortedRows = (startIndex, rowList) => {\n    sortedRows = [...sortedRows.slice(0, startIndex), ...rowList, ...sortedRows.slice(startIndex)];\n    let treeSize = 0;\n    rowList.forEach(rowId => {\n      treeSize += 1;\n      const children = sortedGroupedByParentRows.get(rowId);\n\n      if (children != null && children.length) {\n        const subTreeSize = insertRowListIntoSortedRows(startIndex + treeSize, children);\n        treeSize += subTreeSize;\n      }\n    });\n    return treeSize;\n  };\n\n  insertRowListIntoSortedRows(0, sortedGroupedByParentRows.get(null));\n  return sortedRows;\n};","map":null,"metadata":{},"sourceType":"module"}