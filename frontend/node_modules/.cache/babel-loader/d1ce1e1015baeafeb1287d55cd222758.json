{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridSelector, gridColumnLookupSelector } from '@mui/x-data-grid-pro';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { gridRowGroupingSanitizedModelSelector } from '../hooks/features/rowGrouping/gridRowGroupingSelector';\nimport { getRowGroupingCriteriaFromGroupingField, GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD, isGroupingColumn } from '../hooks/features/rowGrouping/gridRowGroupingUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst GridRowGroupingColumnMenuItems = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rowGroupingModel = useGridSelector(apiRef, gridRowGroupingSanitizedModelSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n\n  const renderUnGroupingMenuItem = field => {\n    var _columnsLookup$field$;\n\n    const ungroupColumn = event => {\n      apiRef.current.removeRowGroupingCriteria(field);\n\n      if (onClick) {\n        onClick(event);\n      }\n    };\n\n    const name = (_columnsLookup$field$ = columnsLookup[field].headerName) != null ? _columnsLookup$field$ : field;\n    return /*#__PURE__*/_jsx(MenuItem, {\n      onClick: ungroupColumn,\n      children: apiRef.current.getLocaleText('unGroupColumn')(name)\n    }, field);\n  };\n\n  if (!column || !isGroupingColumn(column.field)) {\n    return null;\n  }\n\n  if (column.field === GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD) {\n    return /*#__PURE__*/_jsx(React.Fragment, {\n      children: rowGroupingModel.map(renderUnGroupingMenuItem)\n    });\n  }\n\n  return renderUnGroupingMenuItem(getRowGroupingCriteriaFromGroupingField(column.field));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridRowGroupingColumnMenuItems.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridRowGroupingColumnMenuItems };","map":null,"metadata":{},"sourceType":"module"}