{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { GridPinnedPosition } from '../hooks/features/columnPinning';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst GridColumnPinningMenuItems = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n\n  const pinColumn = side => event => {\n    apiRef.current.pinColumn(column.field, side);\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  const unpinColumn = event => {\n    apiRef.current.unpinColumn(column.field);\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  if (!column) {\n    return null;\n  }\n\n  const side = apiRef.current.isColumnPinned(column.field);\n\n  if (side) {\n    const otherSide = side === GridPinnedPosition.right ? GridPinnedPosition.left : GridPinnedPosition.right;\n    const label = otherSide === GridPinnedPosition.right ? 'pinToRight' : 'pinToLeft';\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [/*#__PURE__*/_jsx(MenuItem, {\n        onClick: pinColumn(otherSide),\n        children: apiRef.current.getLocaleText(label)\n      }), /*#__PURE__*/_jsx(MenuItem, {\n        onClick: unpinColumn,\n        children: apiRef.current.getLocaleText('unpin')\n      })]\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(MenuItem, {\n      onClick: pinColumn(GridPinnedPosition.left),\n      children: apiRef.current.getLocaleText('pinToLeft')\n    }), /*#__PURE__*/_jsx(MenuItem, {\n      onClick: pinColumn(GridPinnedPosition.right),\n      children: apiRef.current.getLocaleText('pinToRight')\n    })]\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnPinningMenuItems.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnPinningMenuItems };","map":null,"metadata":{},"sourceType":"module"}