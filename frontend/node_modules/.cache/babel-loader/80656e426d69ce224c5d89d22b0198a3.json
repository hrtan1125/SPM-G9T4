{"ast":null,"code":"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Rating from '@mui/material/Rating';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RatingValue = /*#__PURE__*/React.memo(function RatingValue(props) {\n  const {\n    value\n  } = props;\n  return /*#__PURE__*/_jsxs(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: '24px',\n      color: 'text.secondary'\n    },\n    children: [/*#__PURE__*/_jsx(Rating, {\n      value: value,\n      sx: {\n        mr: 1\n      },\n      readOnly: true\n    }), \" \", Math.round(Number(value) * 10) / 10]\n  });\n});\nexport function renderRating(params) {\n  if (params.value == null) {\n    return '';\n  } // If the aggregated value does not have the same unit as the other cell\n  // Then we fall back to the default rendering based on `valueGetter` instead of rendering the total price UI.\n\n\n  if (params.aggregation && !params.aggregation.hasCellUnit) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(RatingValue, {\n    value: params.value\n  });\n}","map":null,"metadata":{},"sourceType":"module"}