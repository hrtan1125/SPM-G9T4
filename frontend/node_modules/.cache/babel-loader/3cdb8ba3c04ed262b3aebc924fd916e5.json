{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { DATA_GRID_PRO_PROPS_DEFAULT_VALUES, DATA_GRID_DEFAULT_SLOTS_COMPONENTS, GRID_DEFAULT_LOCALE_TEXT } from '@mui/x-data-grid-pro';\nimport { GRID_AGGREGATION_FUNCTIONS } from '../hooks/features/aggregation';\n/**\n * The default values of `DataGridPremiumPropsWithDefaultValue` to inject in the props of DataGridPremium.\n */\n\nexport const DATA_GRID_PREMIUM_PROPS_DEFAULT_VALUES = _extends({}, DATA_GRID_PRO_PROPS_DEFAULT_VALUES, {\n  disableAggregation: false,\n  disableRowGrouping: false,\n  rowGroupingColumnMode: 'single',\n  aggregationFunctions: GRID_AGGREGATION_FUNCTIONS,\n  aggregationRowsScope: 'filtered',\n  getAggregationPosition: groupNode => groupNode == null ? 'footer' : 'inline'\n});\nexport const useDataGridPremiumProps = inProps => {\n  const themedProps = useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  });\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const components = React.useMemo(() => {\n    const overrides = themedProps.components;\n\n    if (!overrides) {\n      return _extends({}, DATA_GRID_DEFAULT_SLOTS_COMPONENTS);\n    }\n\n    const mergedComponents = {};\n    Object.entries(DATA_GRID_DEFAULT_SLOTS_COMPONENTS).forEach(_ref => {\n      let [key, defaultComponent] = _ref;\n      mergedComponents[key] = overrides[key] === undefined ? defaultComponent : overrides[key];\n    });\n    return mergedComponents;\n  }, [themedProps.components]);\n  return React.useMemo(() => {\n    var _themedProps$experime;\n\n    return _extends({}, DATA_GRID_PREMIUM_PROPS_DEFAULT_VALUES, themedProps, {\n      disableAggregation: themedProps.disableAggregation || !((_themedProps$experime = themedProps.experimentalFeatures) != null && _themedProps$experime.aggregation),\n      localeText,\n      components,\n      signature: 'DataGridPremium'\n    });\n  }, [themedProps, localeText, components]);\n};","map":null,"metadata":{},"sourceType":"module"}