{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GridFeatureModeConstant } from '@mui/x-data-grid';\nexport const GRID_SKELETON_ROW_ROOT_ID = 'auto-generated-skeleton-row-root';\n\nconst getSkeletonRowId = index => `${GRID_SKELETON_ROW_ROOT_ID}-${index}`;\n\nexport const useGridLazyLoaderPreProcessors = (apiRef, props) => {\n  var _props$experimentalFe;\n\n  const {\n    lazyLoading\n  } = (_props$experimentalFe = props.experimentalFeatures) != null ? _props$experimentalFe : {};\n  const addSkeletonRows = React.useCallback(groupingParams => {\n    if (!lazyLoading || props.rowsLoadingMode !== GridFeatureModeConstant.server || !props.rowCount || groupingParams.ids.length >= props.rowCount) {\n      return groupingParams;\n    }\n\n    const newRowsIds = [...groupingParams.ids];\n\n    for (let i = 0; i < props.rowCount - groupingParams.ids.length; i += 1) {\n      const skeletonId = getSkeletonRowId(i);\n      newRowsIds.push(skeletonId);\n    }\n\n    return _extends({}, groupingParams, {\n      ids: newRowsIds\n    });\n  }, [props.rowCount, props.rowsLoadingMode, lazyLoading]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateRows', addSkeletonRows);\n};","map":null,"metadata":{},"sourceType":"module"}