{"ast":null,"code":"import * as React from 'react';\nimport ReportProblemIcon from '@mui/icons-material/ReportProblem';\nimport InfoIcon from '@mui/icons-material/Info';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport DoneIcon from '@mui/icons-material/Done';\nimport Chip from '@mui/material/Chip';\nimport { styled } from '@mui/material/styles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledChip = styled(Chip)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    justifyContent: 'left',\n    '& .icon': {\n      color: 'inherit'\n    },\n    '&.Open': {\n      color: theme.palette.info.dark,\n      border: `1px solid ${theme.palette.info.main}`\n    },\n    '&.Filled': {\n      color: theme.palette.success.dark,\n      border: `1px solid ${theme.palette.success.main}`\n    },\n    '&.PartiallyFilled': {\n      color: theme.palette.warning.dark,\n      border: `1px solid ${theme.palette.warning.main}`\n    },\n    '&.Rejected': {\n      color: theme.palette.error.dark,\n      border: `1px solid ${theme.palette.error.main}`\n    }\n  };\n});\nconst Status = /*#__PURE__*/React.memo(props => {\n  const {\n    status\n  } = props;\n  let icon = null;\n\n  if (status === 'Rejected') {\n    icon = /*#__PURE__*/_jsx(ReportProblemIcon, {\n      className: \"icon\"\n    });\n  } else if (status === 'Open') {\n    icon = /*#__PURE__*/_jsx(InfoIcon, {\n      className: \"icon\"\n    });\n  } else if (status === 'PartiallyFilled') {\n    icon = /*#__PURE__*/_jsx(AutorenewIcon, {\n      className: \"icon\"\n    });\n  } else if (status === 'Filled') {\n    icon = /*#__PURE__*/_jsx(DoneIcon, {\n      className: \"icon\"\n    });\n  }\n\n  let label = status;\n\n  if (status === 'PartiallyFilled') {\n    label = 'Partially Filled';\n  }\n\n  return /*#__PURE__*/_jsx(StyledChip, {\n    className: status,\n    icon: icon,\n    size: \"small\",\n    label: label,\n    variant: \"outlined\"\n  });\n});\nexport function renderStatus(params) {\n  if (params.rowNode.isAutoGenerated || params.value == null) {\n    return '';\n  }\n\n  return /*#__PURE__*/_jsx(Status, {\n    status: params.value\n  });\n}","map":null,"metadata":{},"sourceType":"module"}