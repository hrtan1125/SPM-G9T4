{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Rating from '@mui/material/Rating';\nimport { useGridApiContext } from '@mui/x-data-grid-premium';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction EditRating(props) {\n  const {\n    id,\n    value,\n    field\n  } = props;\n  const apiRef = useGridApiContext();\n\n  const handleChange = event => {\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: Number(event.target.value)\n    }, event); // Check if the event is not from the keyboard\n    // https://github.com/facebook/react/issues/7407\n\n    if (event.nativeEvent.clientX !== 0 && event.nativeEvent.clientY !== 0) {\n      apiRef.current.commitCellChange({\n        id,\n        field\n      });\n      apiRef.current.setCellMode(id, field, 'view');\n    }\n  };\n\n  const handleRef = element => {\n    if (element) {\n      element.querySelector(`input[value=\"${value}\"]`).focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: '24px',\n      color: 'text.secondary',\n      mr: 1\n    },\n    children: [/*#__PURE__*/_jsx(Rating, {\n      ref: handleRef,\n      name: \"rating\",\n      value: Number(value),\n      precision: 1,\n      onChange: handleChange,\n      sx: {\n        mr: 1\n      }\n    }), Number(value)]\n  });\n}\n\nexport function renderEditRating(params) {\n  return /*#__PURE__*/_jsx(EditRating, _extends({}, params));\n}","map":null,"metadata":{},"sourceType":"module"}