{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '@mui/x-data-grid-premium';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { INCOTERM_OPTIONS } from '../services/static-data';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction EditIncoterm(props) {\n  const {\n    id,\n    value,\n    field\n  } = props;\n  const apiRef = useGridApiContext();\n\n  const handleChange = event => {\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: event.target.value\n    }, event);\n    apiRef.current.commitCellChange({\n      id,\n      field\n    });\n    apiRef.current.setCellMode(id, field, 'view');\n\n    if (event.key) {\n      // TODO v6: remove once we stop ignoring events fired from portals\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'backdropClick') {\n      apiRef.current.setCellMode(id, field, 'view');\n    }\n  };\n\n  return /*#__PURE__*/_jsx(Select, {\n    value: value,\n    onChange: handleChange,\n    MenuProps: {\n      onClose: handleClose\n    },\n    sx: {\n      height: '100%',\n      '& .MuiSelect-select': {\n        display: 'flex',\n        alignItems: 'center',\n        pl: 1\n      }\n    },\n    autoFocus: true,\n    fullWidth: true,\n    open: true,\n    children: INCOTERM_OPTIONS.map(option => {\n      const tooltip = option.slice(option.indexOf('(') + 1, option.indexOf(')'));\n      const code = option.slice(0, option.indexOf('(')).trim();\n      return /*#__PURE__*/_jsxs(MenuItem, {\n        value: option,\n        children: [/*#__PURE__*/_jsx(ListItemIcon, {\n          sx: {\n            minWidth: 36\n          },\n          children: code\n        }), /*#__PURE__*/_jsx(ListItemText, {\n          primary: tooltip,\n          sx: {\n            overflow: 'hidden'\n          }\n        })]\n      }, option);\n    })\n  });\n}\n\nexport function renderEditIncoterm(params) {\n  return /*#__PURE__*/_jsx(EditIncoterm, _extends({}, params));\n}","map":null,"metadata":{},"sourceType":"module"}