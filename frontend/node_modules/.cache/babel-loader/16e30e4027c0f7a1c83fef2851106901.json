{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { gridColumnLookupSelector, useGridSelector } from '@mui/x-data-grid-pro';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { gridRowGroupingSanitizedModelSelector } from '../hooks/features/rowGrouping/gridRowGroupingSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst GridRowGroupableColumnMenuItems = props => {\n  var _columnsLookup$column;\n\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rowGroupingModel = useGridSelector(apiRef, gridRowGroupingSanitizedModelSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n\n  if (!(column != null && column.groupable)) {\n    return null;\n  }\n\n  const ungroupColumn = event => {\n    apiRef.current.removeRowGroupingCriteria(column.field);\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  const groupColumn = event => {\n    apiRef.current.addRowGroupingCriteria(column.field);\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  const name = (_columnsLookup$column = columnsLookup[column.field].headerName) != null ? _columnsLookup$column : column.field;\n\n  if (rowGroupingModel.includes(column.field)) {\n    return /*#__PURE__*/_jsx(MenuItem, {\n      onClick: ungroupColumn,\n      children: apiRef.current.getLocaleText('unGroupColumn')(name)\n    });\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: groupColumn,\n    children: apiRef.current.getLocaleText('groupColumn')(name)\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridRowGroupableColumnMenuItems.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridRowGroupableColumnMenuItems };","map":null,"metadata":{},"sourceType":"module"}