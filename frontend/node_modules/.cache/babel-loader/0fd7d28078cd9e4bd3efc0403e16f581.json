{"ast":null,"code":"export const currencyPairs = ['USDGBP', 'USDEUR', 'GBPEUR', 'JPYUSD', 'MXNUSD', 'BTCUSD', 'USDCAD', 'EURJPY', 'EURUSD', 'EURCHF', 'USDCHF', 'EURGBP', 'GBPUSD', 'AUDCAD', 'NZDUSD', 'GBPCHF', 'AUDUSD', 'GBPJPY', 'USDJPY', 'CHFJPY', 'EURCAD', 'AUDJPY', 'EURAUD', 'AUDNZD', 'CADEUR', 'CHFMXN', 'ETHUSD', 'BCHUSD', 'ETHBTC', 'XRPUSD', 'XRPBTC', 'USDLTC', 'USDXRP', 'USDDSH', 'USDBCH', 'JPYEUR', 'JPYUSD', 'JPYGBP', 'JPYCAD', 'JPYCHF', 'JPYAUD', 'JPYNZD', 'JPYSGD', 'JPYNOK', 'JPYRUB', 'JPYSEK', 'JPYTRY', 'JPYZAR', 'JPYHKD', 'JPYCNH', 'JPYDKK', 'JPYMXN', 'JPYPLN', 'JPYXAG', 'JPYXAU', 'JPYBTC', 'JPYETH', 'JPYLTC', 'JPYXRP', 'JPYDSH', 'JPYBCH', 'GBPEUR', 'GBPRUB', 'GBPTRY'];\nexport const getBasicGridData = (rowLength, colLength) => {\n  const data = [];\n  const pricesColLength = colLength - 2;\n\n  for (let i = 0; i < rowLength; i += 1) {\n    const idx = i >= currencyPairs.length ? i % currencyPairs.length : i;\n    const model = {\n      id: i,\n      currencyPair: currencyPairs[idx]\n    };\n\n    for (let j = 1; j <= pricesColLength; j += 1) {\n      model[`price${j}M`] = Number(`${i.toString()}${j}`); // randomPrice(0.7, 2);\n    }\n\n    data.push(model);\n  }\n\n  const columns = [{\n    field: 'id',\n    headerName: 'id',\n    type: 'number'\n  }, {\n    field: 'currencyPair',\n    headerName: 'Currency Pair'\n  }];\n\n  for (let j = 1; j <= pricesColLength; j += 1) {\n    // const y = Math.floor(j / 12);\n    columns.push({\n      field: `price${j}M`,\n      headerName: `${j}M`,\n      type: 'number'\n    }); // (y > 0 ? `${y}Y` : '') + `${j - y * 12}M`\n  }\n\n  columns.length = colLength; // we cut the array in case < 2;\n\n  return {\n    columns,\n    rows: data\n  };\n};","map":{"version":3,"names":["currencyPairs","getBasicGridData","rowLength","colLength","data","pricesColLength","i","idx","length","model","id","currencyPair","j","Number","toString","push","columns","field","headerName","type","rows"],"sources":["C:/Users/Brian/Documents/GitHub/SPM-G9T4/frontend/node_modules/@mui/x-data-grid-generator/services/basic-data-service.js"],"sourcesContent":["export const currencyPairs = ['USDGBP', 'USDEUR', 'GBPEUR', 'JPYUSD', 'MXNUSD', 'BTCUSD', 'USDCAD', 'EURJPY', 'EURUSD', 'EURCHF', 'USDCHF', 'EURGBP', 'GBPUSD', 'AUDCAD', 'NZDUSD', 'GBPCHF', 'AUDUSD', 'GBPJPY', 'USDJPY', 'CHFJPY', 'EURCAD', 'AUDJPY', 'EURAUD', 'AUDNZD', 'CADEUR', 'CHFMXN', 'ETHUSD', 'BCHUSD', 'ETHBTC', 'XRPUSD', 'XRPBTC', 'USDLTC', 'USDXRP', 'USDDSH', 'USDBCH', 'JPYEUR', 'JPYUSD', 'JPYGBP', 'JPYCAD', 'JPYCHF', 'JPYAUD', 'JPYNZD', 'JPYSGD', 'JPYNOK', 'JPYRUB', 'JPYSEK', 'JPYTRY', 'JPYZAR', 'JPYHKD', 'JPYCNH', 'JPYDKK', 'JPYMXN', 'JPYPLN', 'JPYXAG', 'JPYXAU', 'JPYBTC', 'JPYETH', 'JPYLTC', 'JPYXRP', 'JPYDSH', 'JPYBCH', 'GBPEUR', 'GBPRUB', 'GBPTRY'];\nexport const getBasicGridData = (rowLength, colLength) => {\n  const data = [];\n  const pricesColLength = colLength - 2;\n\n  for (let i = 0; i < rowLength; i += 1) {\n    const idx = i >= currencyPairs.length ? i % currencyPairs.length : i;\n    const model = {\n      id: i,\n      currencyPair: currencyPairs[idx]\n    };\n\n    for (let j = 1; j <= pricesColLength; j += 1) {\n      model[`price${j}M`] = Number(`${i.toString()}${j}`); // randomPrice(0.7, 2);\n    }\n\n    data.push(model);\n  }\n\n  const columns = [{\n    field: 'id',\n    headerName: 'id',\n    type: 'number'\n  }, {\n    field: 'currencyPair',\n    headerName: 'Currency Pair'\n  }];\n\n  for (let j = 1; j <= pricesColLength; j += 1) {\n    // const y = Math.floor(j / 12);\n    columns.push({\n      field: `price${j}M`,\n      headerName: `${j}M`,\n      type: 'number'\n    }); // (y > 0 ? `${y}Y` : '') + `${j - y * 12}M`\n  }\n\n  columns.length = colLength; // we cut the array in case < 2;\n\n  return {\n    columns,\n    rows: data\n  };\n};"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,QAA/B,EAAyC,QAAzC,EAAmD,QAAnD,EAA6D,QAA7D,EAAuE,QAAvE,EAAiF,QAAjF,EAA2F,QAA3F,EAAqG,QAArG,EAA+G,QAA/G,EAAyH,QAAzH,EAAmI,QAAnI,EAA6I,QAA7I,EAAuJ,QAAvJ,EAAiK,QAAjK,EAA2K,QAA3K,EAAqL,QAArL,EAA+L,QAA/L,EAAyM,QAAzM,EAAmN,QAAnN,EAA6N,QAA7N,EAAuO,QAAvO,EAAiP,QAAjP,EAA2P,QAA3P,EAAqQ,QAArQ,EAA+Q,QAA/Q,EAAyR,QAAzR,EAAmS,QAAnS,EAA6S,QAA7S,EAAuT,QAAvT,EAAiU,QAAjU,EAA2U,QAA3U,EAAqV,QAArV,EAA+V,QAA/V,EAAyW,QAAzW,EAAmX,QAAnX,EAA6X,QAA7X,EAAuY,QAAvY,EAAiZ,QAAjZ,EAA2Z,QAA3Z,EAAqa,QAAra,EAA+a,QAA/a,EAAyb,QAAzb,EAAmc,QAAnc,EAA6c,QAA7c,EAAud,QAAvd,EAAie,QAAje,EAA2e,QAA3e,EAAqf,QAArf,EAA+f,QAA/f,EAAygB,QAAzgB,EAAmhB,QAAnhB,EAA6hB,QAA7hB,EAAuiB,QAAviB,EAAijB,QAAjjB,EAA2jB,QAA3jB,EAAqkB,QAArkB,EAA+kB,QAA/kB,EAAylB,QAAzlB,EAAmmB,QAAnmB,EAA6mB,QAA7mB,EAAunB,QAAvnB,CAAtB;AACP,OAAO,MAAMC,gBAAgB,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;EACxD,MAAMC,IAAI,GAAG,EAAb;EACA,MAAMC,eAAe,GAAGF,SAAS,GAAG,CAApC;;EAEA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAApB,EAA+BI,CAAC,IAAI,CAApC,EAAuC;IACrC,MAAMC,GAAG,GAAGD,CAAC,IAAIN,aAAa,CAACQ,MAAnB,GAA4BF,CAAC,GAAGN,aAAa,CAACQ,MAA9C,GAAuDF,CAAnE;IACA,MAAMG,KAAK,GAAG;MACZC,EAAE,EAAEJ,CADQ;MAEZK,YAAY,EAAEX,aAAa,CAACO,GAAD;IAFf,CAAd;;IAKA,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIP,eAArB,EAAsCO,CAAC,IAAI,CAA3C,EAA8C;MAC5CH,KAAK,CAAE,QAAOG,CAAE,GAAX,CAAL,GAAsBC,MAAM,CAAE,GAAEP,CAAC,CAACQ,QAAF,EAAa,GAAEF,CAAE,EAArB,CAA5B,CAD4C,CACS;IACtD;;IAEDR,IAAI,CAACW,IAAL,CAAUN,KAAV;EACD;;EAED,MAAMO,OAAO,GAAG,CAAC;IACfC,KAAK,EAAE,IADQ;IAEfC,UAAU,EAAE,IAFG;IAGfC,IAAI,EAAE;EAHS,CAAD,EAIb;IACDF,KAAK,EAAE,cADN;IAEDC,UAAU,EAAE;EAFX,CAJa,CAAhB;;EASA,KAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIP,eAArB,EAAsCO,CAAC,IAAI,CAA3C,EAA8C;IAC5C;IACAI,OAAO,CAACD,IAAR,CAAa;MACXE,KAAK,EAAG,QAAOL,CAAE,GADN;MAEXM,UAAU,EAAG,GAAEN,CAAE,GAFN;MAGXO,IAAI,EAAE;IAHK,CAAb,EAF4C,CAMxC;EACL;;EAEDH,OAAO,CAACR,MAAR,GAAiBL,SAAjB,CApCwD,CAoC5B;;EAE5B,OAAO;IACLa,OADK;IAELI,IAAI,EAAEhB;EAFD,CAAP;AAID,CA1CM"},"metadata":{},"sourceType":"module"}