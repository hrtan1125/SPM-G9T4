{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Documents\\\\GitHub\\\\SPM-G9T4\\\\frontend\\\\src\\\\pages\\\\Roles.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { randomCreatedDate, randomTraderName, randomUpdatedDate } from '@mui/x-data-grid-generator';\nimport { useGlobalContext } from '../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Roles() {\n  _s();\n\n  const {\n    roles\n  } = useGlobalContext();\n  console.log(roles);\n  const transformed = roles.map(_ref => {\n    let {\n      deleted,\n      role_id,\n      role_name\n    } = _ref;\n    return {\n      deleted,\n      id: role_id,\n      role_name\n    };\n  });\n  return (\n    /*#__PURE__*/\n    // <div style={{display: 'flex', marginTop: 80, justifyContent: \"center\"}} >\n    //     <div style={{ height: 300, width: '100%' }}>\n    //   <DataGrid\n    //     rows={transformed}\n    //     columns={columns}\n    //     experimentalFeatures={{ newEditingApi: true }}\n    //   />\n    // </div>\n    // </div>\n    _jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flexGrow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(DataGrid, {\n            roles: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Roles, \"yheWJQ7ITnJwJ+9rdaOztyCwSAQ=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = Roles;\nconst columns = [// { field: 'deleted', headerName: 'Name', width: 180, editable: true },\n// { field: 'role_id', headerName: 'Age', type: 'number', editable: true },\n{\n  field: 'role_name',\n  headerName: 'Role Name',\n  width: 180,\n  editable: true\n}];\nconst rows = [{\n  id: 1,\n  name: randomTraderName(),\n  age: 25,\n  dateCreated: randomCreatedDate(),\n  lastLogin: randomUpdatedDate()\n}, {\n  id: 2,\n  name: randomTraderName(),\n  age: 36,\n  dateCreated: randomCreatedDate(),\n  lastLogin: randomUpdatedDate()\n}, {\n  id: 3,\n  name: randomTraderName(),\n  age: 19,\n  dateCreated: randomCreatedDate(),\n  lastLogin: randomUpdatedDate()\n}, {\n  id: 4,\n  name: randomTraderName(),\n  age: 28,\n  dateCreated: randomCreatedDate(),\n  lastLogin: randomUpdatedDate()\n}, {\n  id: 5,\n  name: randomTraderName(),\n  age: 23,\n  dateCreated: randomCreatedDate(),\n  lastLogin: randomUpdatedDate()\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"Roles\");","map":{"version":3,"names":["React","DataGrid","randomCreatedDate","randomTraderName","randomUpdatedDate","useGlobalContext","Roles","roles","console","log","transformed","map","deleted","role_id","role_name","id","height","width","display","flexGrow","columns","field","headerName","editable","rows","name","age","dateCreated","lastLogin"],"sources":["C:/Users/Brian/Documents/GitHub/SPM-G9T4/frontend/src/pages/Roles.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport {\r\n  randomCreatedDate,\r\n  randomTraderName,\r\n  randomUpdatedDate,\r\n} from '@mui/x-data-grid-generator';\r\nimport { useGlobalContext } from '../context';\r\n\r\nexport default function Roles() {\r\n  const {roles} = useGlobalContext()\r\n  console.log(roles)\r\n  const transformed = roles.map(({ deleted, role_id, role_name }) => ({ deleted, id: role_id, role_name }));\r\n  return (\r\n    // <div style={{display: 'flex', marginTop: 80, justifyContent: \"center\"}} >\r\n    //     <div style={{ height: 300, width: '100%' }}>\r\n    //   <DataGrid\r\n    //     rows={transformed}\r\n    //     columns={columns}\r\n    //     experimentalFeatures={{ newEditingApi: true }}\r\n    //   />\r\n    // </div>\r\n    // </div>\r\n\r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <div style={{ display: 'flex', height: '100%' }}>\r\n        <div style={{ flexGrow: 1 }}>\r\n          <DataGrid roles />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nconst columns = [\r\n  // { field: 'deleted', headerName: 'Name', width: 180, editable: true },\r\n  // { field: 'role_id', headerName: 'Age', type: 'number', editable: true },\r\n  {\r\n    field: 'role_name',\r\n    headerName: 'Role Name',\r\n    width: 180,\r\n    editable: true,\r\n  }\r\n];\r\n\r\nconst rows = [\r\n  {\r\n    id: 1,\r\n    name: randomTraderName(),\r\n    age: 25,\r\n    dateCreated: randomCreatedDate(),\r\n    lastLogin: randomUpdatedDate(),\r\n  },\r\n  {\r\n    id: 2,\r\n    name: randomTraderName(),\r\n    age: 36,\r\n    dateCreated: randomCreatedDate(),\r\n    lastLogin: randomUpdatedDate(),\r\n  },\r\n  {\r\n    id: 3,\r\n    name: randomTraderName(),\r\n    age: 19,\r\n    dateCreated: randomCreatedDate(),\r\n    lastLogin: randomUpdatedDate(),\r\n  },\r\n  {\r\n    id: 4,\r\n    name: randomTraderName(),\r\n    age: 28,\r\n    dateCreated: randomCreatedDate(),\r\n    lastLogin: randomUpdatedDate(),\r\n  },\r\n  {\r\n    id: 5,\r\n    name: randomTraderName(),\r\n    age: 23,\r\n    dateCreated: randomCreatedDate(),\r\n    lastLogin: randomUpdatedDate(),\r\n  },\r\n];\r\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,iBAHF,QAIO,4BAJP;AAKA,SAASC,gBAAT,QAAiC,YAAjC;;AAEA,eAAe,SAASC,KAAT,GAAiB;EAAA;;EAC9B,MAAM;IAACC;EAAD,IAAUF,gBAAgB,EAAhC;EACAG,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACA,MAAMG,WAAW,GAAGH,KAAK,CAACI,GAAN,CAAU;IAAA,IAAC;MAAEC,OAAF;MAAWC,OAAX;MAAoBC;IAApB,CAAD;IAAA,OAAsC;MAAEF,OAAF;MAAWG,EAAE,EAAEF,OAAf;MAAwBC;IAAxB,CAAtC;EAAA,CAAV,CAApB;EACA;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;MAAK,KAAK,EAAE;QAAEE,MAAM,EAAE,GAAV;QAAeC,KAAK,EAAE;MAAtB,CAAZ;MAAA,uBACE;QAAK,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAX;UAAmBF,MAAM,EAAE;QAA3B,CAAZ;QAAA,uBACE;UAAK,KAAK,EAAE;YAAEG,QAAQ,EAAE;UAAZ,CAAZ;UAAA,uBACE,QAAC,QAAD;YAAU,KAAK;UAAf;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAXF;AAoBD;;GAxBuBb,K;UACND,gB;;;KADMC,K;AA0BxB,MAAMc,OAAO,GAAG,CACd;AACA;AACA;EACEC,KAAK,EAAE,WADT;EAEEC,UAAU,EAAE,WAFd;EAGEL,KAAK,EAAE,GAHT;EAIEM,QAAQ,EAAE;AAJZ,CAHc,CAAhB;AAWA,MAAMC,IAAI,GAAG,CACX;EACET,EAAE,EAAE,CADN;EAEEU,IAAI,EAAEtB,gBAAgB,EAFxB;EAGEuB,GAAG,EAAE,EAHP;EAIEC,WAAW,EAAEzB,iBAAiB,EAJhC;EAKE0B,SAAS,EAAExB,iBAAiB;AAL9B,CADW,EAQX;EACEW,EAAE,EAAE,CADN;EAEEU,IAAI,EAAEtB,gBAAgB,EAFxB;EAGEuB,GAAG,EAAE,EAHP;EAIEC,WAAW,EAAEzB,iBAAiB,EAJhC;EAKE0B,SAAS,EAAExB,iBAAiB;AAL9B,CARW,EAeX;EACEW,EAAE,EAAE,CADN;EAEEU,IAAI,EAAEtB,gBAAgB,EAFxB;EAGEuB,GAAG,EAAE,EAHP;EAIEC,WAAW,EAAEzB,iBAAiB,EAJhC;EAKE0B,SAAS,EAAExB,iBAAiB;AAL9B,CAfW,EAsBX;EACEW,EAAE,EAAE,CADN;EAEEU,IAAI,EAAEtB,gBAAgB,EAFxB;EAGEuB,GAAG,EAAE,EAHP;EAIEC,WAAW,EAAEzB,iBAAiB,EAJhC;EAKE0B,SAAS,EAAExB,iBAAiB;AAL9B,CAtBW,EA6BX;EACEW,EAAE,EAAE,CADN;EAEEU,IAAI,EAAEtB,gBAAgB,EAFxB;EAGEuB,GAAG,EAAE,EAHP;EAIEC,WAAW,EAAEzB,iBAAiB,EAJhC;EAKE0B,SAAS,EAAExB,iBAAiB;AAL9B,CA7BW,CAAb"},"metadata":{},"sourceType":"module"}